{"ast":null,"code":"import { toast } from \"react-hot-toast\";\n\n//Validate login page username\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n\n//Validate password \nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n\n//Validate password\nfunction passwordVerify(errors = {}, values) {\n  /* eslint-disable no-useless-escape */\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password must be more than 4 characters long\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have special character\");\n  }\n  return errors;\n}\n\n// Validate username\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error(\"Username Required...!\");\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(\"Invalid Username...!\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordValidate","passwordVerify","specialChars","password","error","includes","length","test","username"],"sources":["S:/Development/MERN/login_app/client/src/helper/validate.js"],"sourcesContent":["import { toast } from \"react-hot-toast\";\r\n\r\n//Validate login page username\r\nexport async function usernameValidate(values) {\r\n  const errors = usernameVerify({}, values);\r\n  return errors;\r\n}\r\n\r\n//Validate password \r\nexport async function passwordValidate(values) {\r\n  const errors = passwordVerify({}, values);\r\n  return errors;\r\n}\r\n\r\n\r\n\r\n\r\n//Validate password\r\nfunction passwordVerify(errors = {}, values) {\r\n  /* eslint-disable no-useless-escape */\r\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\n  if (!values.password) {\r\n    errors.password = toast.error(\"Password Required...!\");\r\n  } else if (values.password.includes(\" \")) {\r\n    errors.password = toast.error(\"Wrong Password...!\");\r\n  } else if (values.password.length < 4) {\r\n    errors.password = toast.error(\r\n      \"Password must be more than 4 characters long\"\r\n    );\r\n  } else if (!specialChars.test(values.password)) {\r\n    errors.password = toast.error(\"Password must have special character\");\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\n// Validate username\r\nfunction usernameVerify(error = {}, values) {\r\n  if (!values.username) {\r\n    error.username = toast.error(\"Username Required...!\");\r\n  } else if (values.username.includes(\" \")) {\r\n    error.username = toast.error(\"Invalid Username...!\");\r\n  }\r\n  return error;\r\n}\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,iBAAiB;;AAEvC;AACA,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAE;EAC7C,MAAMC,MAAM,GAAGC,cAAc,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC;EACzC,OAAOC,MAAM;AACf;;AAEA;AACA,OAAO,eAAeE,gBAAgBA,CAACH,MAAM,EAAE;EAC7C,MAAMC,MAAM,GAAGG,cAAc,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAAC;EACzC,OAAOC,MAAM;AACf;;AAKA;AACA,SAASG,cAAcA,CAACH,MAAM,GAAG,CAAC,CAAC,EAAED,MAAM,EAAE;EAC3C;EACA,MAAMK,YAAY,GAAG,yCAAyC;EAE9D,IAAI,CAACL,MAAM,CAACM,QAAQ,EAAE;IACpBL,MAAM,CAACK,QAAQ,GAAGR,KAAK,CAACS,KAAK,CAAC,uBAAuB,CAAC;EACxD,CAAC,MAAM,IAAIP,MAAM,CAACM,QAAQ,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;IACxCP,MAAM,CAACK,QAAQ,GAAGR,KAAK,CAACS,KAAK,CAAC,oBAAoB,CAAC;EACrD,CAAC,MAAM,IAAIP,MAAM,CAACM,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;IACrCR,MAAM,CAACK,QAAQ,GAAGR,KAAK,CAACS,KAAK,CAC3B,8CACF,CAAC;EACH,CAAC,MAAM,IAAI,CAACF,YAAY,CAACK,IAAI,CAACV,MAAM,CAACM,QAAQ,CAAC,EAAE;IAC9CL,MAAM,CAACK,QAAQ,GAAGR,KAAK,CAACS,KAAK,CAAC,sCAAsC,CAAC;EACvE;EAEA,OAAON,MAAM;AACf;;AAEA;AACA,SAASC,cAAcA,CAACK,KAAK,GAAG,CAAC,CAAC,EAAEP,MAAM,EAAE;EAC1C,IAAI,CAACA,MAAM,CAACW,QAAQ,EAAE;IACpBJ,KAAK,CAACI,QAAQ,GAAGb,KAAK,CAACS,KAAK,CAAC,uBAAuB,CAAC;EACvD,CAAC,MAAM,IAAIP,MAAM,CAACW,QAAQ,CAACH,QAAQ,CAAC,GAAG,CAAC,EAAE;IACxCD,KAAK,CAACI,QAAQ,GAAGb,KAAK,CAACS,KAAK,CAAC,sBAAsB,CAAC;EACtD;EACA,OAAOA,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}